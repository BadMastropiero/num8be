type DepartmentHistory {
    id:           Int!
    departmentId: Int!
    department:   Department!
    startDate:    String!
    employee:     Employee!
    employeeId:   Int!
}

type Employee {
    id:           Int!
    firstName:    String!
    lastName:     String!
    hireDate:     String!
    departmentId: Int!
    phone:        String
    address:      String
    department:   Department
    isActive:     Boolean!
    departmentHistory: [DepartmentHistory]
}

input CreateEmployeeInput {
    firstName:    String!
    lastName:     String!
    hireDate:     String!
    departmentId: Int!
    phone:        String
    address:      String
    isActive:     Boolean!
}

input UpdateEmployeeInput {
    id: Int!
    firstName:    String
    lastName:     String
    hireDate:     String
    departmentId: Int
    phone:        String
    address:      String
    isActive:     Boolean
}

type Query {
    getEmployees: [Employee]!
    getEmployee(id: Int!): Employee
}

type Mutation {
    createEmployee(createEmployeeInput: CreateEmployeeInput!): Employee!
    updateEmployee(updateEmployeeInput: UpdateEmployeeInput!): Employee!
    removeEmployee(id: Int!): Employee
}
